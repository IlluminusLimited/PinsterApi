# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: pinster/ruby:2.6.2-stretch-node
      environment:
             RAILS_ENV: test
             DATABASE_HOST: 127.0.0.1
             DATABASE_USERNAME: pinsterapi
             DATABASE_PASSWORD:

    - image: circleci/postgres:11.2-alpine-ram
      environment:
             POSTGRES_USER: pinsterapi
             POSTGRES_DB: PinsterApi_test

jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

  backend-tests:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      - run:
          name: Setup dependencies
          command: |
            bundle install --without production --jobs 4 --retry 3 --path vendor/bundle
            bundle exec rake db:create db:migrate

      - save_cache:
          paths:
            - vendor/bundle
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - attach_workspace:
          at: ~/repo/tmp

      - run:
          name: Run backend tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "test/**/*_test.rb" | circleci tests split --split-by=timings)"

            bundle exec rake test
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/coverage/codeclimate.backend.json tmp/coverage/backend/.resultset.json

      - persist_to_workspace:
          root: tmp
          paths:
            - coverage/codeclimate.backend.json

      - store_test_results:
          path: ~/repo/tmp/test-results
      - store_artifacts:
          path: ~/repo/tmp/test-results
          destination: test-results

  upload-coverage:
    <<: *defaults
    environment:
      - CC_TEST_REPORTER_ID: 394d9a15cb6c6c8a5fb16068eda590afb9aac911df116f2045fa27e969ee3367
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/coverage/codeclimate.*.json -p 1 -o tmp/coverage/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/coverage/codeclimate.total.json

  bake:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      - run:
          name: Setup dependencies
          command: |
            bundle install --jobs 4 --retry 3 --path vendor/bundle
            bundle exec rake db:reset

      - run:
          name: Generate apidocs (please help)
          command: |
            chmod +x generate_apidocs.sh
            bash generate_apidocs.sh

      - run:
          name: Setup production dependencies
          command: |
            bundle install --without development test --jobs 4 --retry 3 --path vendor/bundle
            bundle clean

      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./

  deploy-dev:
    working_directory: ~/repo
    docker:
      - image: pinster/awseb
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Create archive
          command: git add .
      - run:
          name: Deploy
          command: eb deploy PinsterApi-1 --staged

  deploy-prod:
    working_directory: ~/repo
    docker:
      - image: pinster/awseb
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Create archive
          command: git add .
      - run:
          name: Deploy
          command: eb deploy PinsterApi-prod --staged

workflows:
  version: 2
  commit:
    jobs:
      - build
      - backend-tests:
          requires:
            - build

      - upload-coverage:
          requires:
            - backend-tests

      - bake:
          filters:
            branches:
              only:
                - develop
                - master

      - deploy-dev:
          requires:
            - bake
            - backend-tests
          filters:
            branches:
              only:
                - develop

      - deploy-prod:
          requires:
            - bake
            - backend-tests
          filters:
            branches:
              only:
                - master

